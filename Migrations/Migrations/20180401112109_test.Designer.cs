// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DAL.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20180401112109_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Model.CommentDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ItemDboId");

                    b.Property<DateTime>("PubDate")
                        .HasMaxLength(30);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(2000);

                    b.Property<int?>("UserDboId");

                    b.HasKey("Id");

                    b.HasIndex("ItemDboId");

                    b.HasIndex("UserDboId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("DAL.Model.DatasourceDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TypeOfData")
                        .HasMaxLength(10);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Datasources");
                });

            modelBuilder.Entity("DAL.Model.ItemDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .HasMaxLength(200);

                    b.Property<string>("CategoryUrl")
                        .HasMaxLength(500);

                    b.Property<string>("Comments")
                        .HasMaxLength(500);

                    b.Property<int?>("DatasourceId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("EnclosureUrl")
                        .HasMaxLength(500);

                    b.Property<string>("Fulltext");

                    b.Property<string>("Guid")
                        .HasMaxLength(500);

                    b.Property<string>("Image")
                        .HasMaxLength(500);

                    b.Property<byte[]>("ItemExternalId")
                        .HasMaxLength(80);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("PubDate")
                        .HasMaxLength(30);

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(500);

                    b.Property<string>("Tags")
                        .HasMaxLength(500);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("DatasourceId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("DAL.Model.LogDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ComplitionStatus")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("DatasourceId");

                    b.Property<TimeSpan>("Durotation")
                        .HasMaxLength(30);

                    b.Property<string>("Error")
                        .HasMaxLength(300);

                    b.Property<DateTime>("StartDate")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("DatasourceId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DAL.Model.UserDbo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ActivationCode");

                    b.Property<DateTime>("DateOfRegistration")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<bool>("EmailIsValidate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DAL.Model.CommentDbo", b =>
                {
                    b.HasOne("DAL.Model.ItemDbo", "ItemDbo")
                        .WithMany("ItemComments")
                        .HasForeignKey("ItemDboId");

                    b.HasOne("DAL.Model.UserDbo", "UserDbo")
                        .WithMany("UserComments")
                        .HasForeignKey("UserDboId");
                });

            modelBuilder.Entity("DAL.Model.ItemDbo", b =>
                {
                    b.HasOne("DAL.Model.DatasourceDbo", "Datasource")
                        .WithMany("Items")
                        .HasForeignKey("DatasourceId");
                });

            modelBuilder.Entity("DAL.Model.LogDbo", b =>
                {
                    b.HasOne("DAL.Model.DatasourceDbo", "Datasource")
                        .WithMany()
                        .HasForeignKey("DatasourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
